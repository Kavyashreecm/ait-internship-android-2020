// ------ 29 Jan 2020 ----------------

----- Task -----
Intent intent = new Intent();
intent.putExtra("student", student);
startActivity(intent);

//in StudentDetailsActivity
//Student student1 = (Student) getIntent().getSerializableExtra("student");


//------- 30 Jan 2020 ------------

added colors to colors.xml
updated the UI design of login page and student reg page
login page as launcher activity
Toast


1. Change the Section and Branch to Spinner
2. ImageView
3. Add Location Code to the project and Get the Location of the User
4. Add Camera Feature to the project and get the photo of the User



Spinner for Section, Branch

//for Location and Maps
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'

//files FusedLocation, MyLocListener

//Android Manifest Permission
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.CAMERA" />

//to ask permissions
implementation 'com.karumi:dexter:6.0.2'

Dexter.withActivity(StudentRegistrationActivity.this)
                .withPermission(Manifest.permission.ACCESS_FINE_LOCATION)
                .withListener(new PermissionListener()
                {
                    @Override
                    public void onPermissionGranted(PermissionGrantedResponse response)
                    {
                        FusedLocation fusedLocation =
                                new FusedLocation(StudentRegistrationActivity.this,
                                        false);
                        fusedLocation.onLocReceived(new MyLocListener()
                        {
                            @Override
                            public void onLocReceived(LatLng latLng)
                            {
                                Toast.makeText(StudentRegistrationActivity.this,
                                        "" + latLng.latitude, Toast.LENGTH_SHORT).show();
                            }
                        });
                    }

                    @Override
                    public void onPermissionDenied(PermissionDeniedResponse response)
                    {

                    }

                    @Override
                    public void onPermissionRationaleShouldBeShown(PermissionRequest permission,
                                                                   PermissionToken token)
                    {

                    }
                })
                .check();


===================== 31-Jan-2020 ===========================

1. Add Text View for location and clickListener

2. External Intent / Internal Intent

3. ========== Google Maps Intent ================

Uri uri = Uri.parse("http://maps.google.com/maps?q=" + latLng.latitude + "," + latLng.longitude);
Intent mapIntent = new Intent(Intent.ACTION_VIEW, uri);
mapIntent.setPackage("com.google.android.apps.maps");
startActivity(mapIntent);

========== Google Maps Intent ================

4. Share Button above Register Button

========== Share Intent ================

String message = "Name: " + student.name + "\n"
                 + "USN: " + student.usn + "\n"
                 + "Branch: " + student.branch + "\n"
                 + "Section: " + student.section + "\n"
                 + "Mobile Number: " + student.mobileNumber + "\n"
                 + "This is my Location: \n" + "http://maps.google.com/maps?q="
                 + latLng.latitude + "," + latLng.longitude);

Intent sendIntent = new Intent();
sendIntent.setAction(Intent.ACTION_SEND);
sendIntent.putExtra(Intent.EXTRA_TEXT, "This is my Location.\n" + "http://maps.google.com/maps?q=" + latLng.latitude + "," + latLng.longitude);
sendIntent.setType("text/plain");
startActivity(sendIntent);

========== Share Intent ================


5. ========== Camera ================

manifest permission
runtime permission

ClickListener for Photo IV

        Dexter.withActivity(StudentRegistrationActivity.this)
                .withPermission(Manifest.permission.CAMERA)
                .withListener(new PermissionListener()
                {
                    @Override
                    public void onPermissionGranted(PermissionGrantedResponse response)
                    {
                        Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
                        startActivityForResult(intent, 6789);
                    }

                    @Override
                    public void onPermissionDenied(PermissionDeniedResponse response)
                    {

                    }

                    @Override
                    public void onPermissionRationaleShouldBeShown(PermissionRequest permission,
                                                                   PermissionToken token)
                    {

                    }
                })
                .check();

Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
startActivityForResult(intent, 6789);


@Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data)
    {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 6789 && resultCode == RESULT_OK)
        {
            Bitmap bitmap = (Bitmap) data.getExtras().get("data");
            ImageView iv = findViewById(R.id.ivRegLogo);
            iv.setImageBitmap(bitmap);
        }
    }

========== Camera ================


======== Text to Speech ==============

String message = "Hello, my name is " + student.name + "."
        + "My USN is " + student.usn + "."
        + "I am from " + student.branch + " branch," + student.section + " section";


TextToSpeech textToSpeech;
public void speak(final String message)
    {
        textToSpeech = new TextToSpeech(getApplicationContext(), new TextToSpeech.OnInitListener()
        {
            @Override
            public void onInit(int status)
            {
                if (status != TextToSpeech.ERROR)
                {
                    textToSpeech.setLanguage(Locale.UK);
                    textToSpeech.speak(message, TextToSpeech.QUEUE_FLUSH, null, null);
                }
            }
        });

    }

======== Text to Speech ==============



========== Video ============

<VideoView
    android:id="@+id/videoView"
    android:layout_width="match_parent"
    android:layout_height="300dp"
    android:layout_marginTop="30dp" />


Intent videoIntent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);
                                videoIntent.putExtra("android.intent.extras.CAMERA_FACING", 1);
                                startActivityForResult(videoIntent, 1111);


if (requestCode == 1111 && resultCode == RESULT_OK)
        {
            Uri videoUri = data.getData();
            VideoView videoView = findViewById(R.id.videoView);
            videoView.setVideoURI(videoUri);
            videoView.start();
        }

========== Video ============


03-Feb-2020
-----------------------------


======== Local Storage ===============

SharedPreferences sharedPreferences = getSharedPreferences(getString(R.string.app_name),
               Context.MODE_PRIVATE);
SharedPreferences.Editor editor = sharedPreferences.edit();
editor.putString("name", "value");
editor.commit();


String value = sharedPreferences.getString("name", "");

======== Local Storage ===============




======== Media Player ============

MediaPlayer mediaPlayer = MediaPlayer.create(StudentRegistrationActivity.this, R.raw.music);
mediaPlayer.start();

======== Media Player ============


============ Animation ===========

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
    <alpha
        android:fromAlpha="0"
        android:toAlpha="1"
        android:duration="3000"/>

    <scale
        android:duration="2000"
        android:fromXScale="0.5"
        android:fromYScale="0.5"
        android:toXScale="1.0"
        android:toYScale="1.0" />

    <rotate
        android:duration="2000"
        android:fromDegrees="0"
        android:startOffset="2000"
        android:toDegrees="360" />
</set>

Animation animation = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.scale);
photoIV.startAnimation(animation);

============ Animation ===========

============ Menu ==============
no Actionbar to dark actionbar in styles.xml
Create Menu xml from new menu
add items give id
onCreateOptionsMenu
onOptionsItemSelected
menu icon , show as action always
============ Menu ==============

============ Alert Dialog =========
AlertDialog.builder
positive, negative button
menu show alert
============

===== Date Picker ========
New Fragment extends DialogFragment implements DatePickerDialog.ondatesetlistener
month zero based

in activity
create new fragment and call show with getSupportFragmentManager(), tag
=============
onDestroy()

time picker -- try

==== Activity Life Cycle ===
onResume()


========= Recycler View ===========
Create New Activity StudentListActivity
Xml RecyclerView
StudentListAdapter


====== 04-02-2020 =======
Activity LifeCycle








